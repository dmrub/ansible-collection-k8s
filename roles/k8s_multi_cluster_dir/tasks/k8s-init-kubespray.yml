- name: Set variables
  set_fact:
    venv_dir: "{{ src }}-venv"

- name: Detect kubespray version
  set_fact:
    kubespray_version: "{{ _kubespray_version[0] if (_kubespray_version|length) > 0 else '0.0' }}"
  vars:
    _kubespray_version: "{{ (branch | regex_search('(?P<version>[0-9]+(?:[.][0-9]+)*)', '\\g<version>')) }}"

- name: Check specific kubespray versions
  set_fact:
    is_kubespray_2_16_0: "{{ kubespray_version is version('2.16.0', '>=') }}"

- name: Create virtual environment
  script:
    cmd: install-venv.sh {{ venv_dir | quote }}
  args:
    creates: "{{ venv_dir }}/bin/activate"

- name: Install kubespray requirements
  shell: |
    set -ex;
    . {{ venv_dir | quote }}/bin/activate;
    pip install -r {{ src | quote }}/requirements.txt;
    if [ -e {{ dest ~ '/requirements.txt' | quote }} ]; then
      pip install -r {{ dest ~ '/requirements.txt' | quote }};
    fi;

- name: Create link to venv
  file:
    force: yes
    src: "{{ venv_dir | relpath(dest) }}"
    dest: "{{ dest }}/venv"
    state: link

- name: Create inventory directory
  file:
    path: "{{ dest }}/inventory"
    state: directory

- name: Create link to kubespray
  file:
    force: yes
    src: "{{ src | relpath(dest) }}"
    dest: "{{ dest }}/kubespray"
    state: link

- name: Create link to group_vars
  file:
    src: "{{ (src+'/inventory/sample/group_vars') | relpath(dest+'/inventory') }}"
    dest: "{{ dest }}/inventory/group_vars"
    state: link
